// <auto-generated />
using System;
using Basvurular.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Urun_Denetim.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250311125132_Yeniiii")]
    partial class Yeniiii
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Basvurular.Entities.Admins", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<string>("AdminAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminYetki")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.ToTable("Adminses");
                });

            modelBuilder.Entity("Basvurular.Entities.Ilce", b =>
                {
                    b.Property<int>("ilceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ilceId"));

                    b.Property<string>("ilceAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ilceId");

                    b.ToTable("Ilces");
                });

            modelBuilder.Entity("Basvurular.Entities.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriID"));

                    b.Property<string>("KategoriAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MarkaID")
                        .HasColumnType("int");

                    b.HasKey("KategoriID");

                    b.HasIndex("MarkaID");

                    b.ToTable("Kategoris");
                });

            modelBuilder.Entity("Basvurular.Entities.KresForm", b =>
                {
                    b.Property<int>("KresFormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KresFormId"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SonucAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dagıtım")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("dtarihi")
                        .HasColumnType("date");

                    b.Property<string>("durumu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ilce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isturu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mahalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("soyisim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KresFormId");

                    b.ToTable("KresForms");
                });

            modelBuilder.Entity("Basvurular.Entities.KullaniciLoglari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndPoint")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IpAdresi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IslemTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KullaniciId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KullaniciLoglaris");
                });

            modelBuilder.Entity("Basvurular.Entities.Mahalle", b =>
                {
                    b.Property<int>("mahalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("mahalleId"));

                    b.Property<int>("ilceId")
                        .HasColumnType("int");

                    b.Property<string>("mahalleAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("mahalleId");

                    b.HasIndex("ilceId");

                    b.ToTable("Mahalles");
                });

            modelBuilder.Entity("Basvurular.Entities.Marka", b =>
                {
                    b.Property<int>("MarkaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarkaID"));

                    b.Property<string>("MarkaAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarkaID");

                    b.ToTable("Markas");
                });

            modelBuilder.Entity("Basvurular.Entities.Urunler", b =>
                {
                    b.Property<int>("UrunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunID"));

                    b.Property<int>("KategoriID")
                        .HasColumnType("int");

                    b.Property<int>("MarkaID")
                        .HasColumnType("int");

                    b.Property<string>("UrunAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UrunFiyat")
                        .HasColumnType("int");

                    b.Property<int?>("UrunStok")
                        .HasColumnType("int");

                    b.HasKey("UrunID");

                    b.HasIndex("KategoriID");

                    b.HasIndex("MarkaID");

                    b.ToTable("Urunlers");
                });

            modelBuilder.Entity("Basvurular.Entities.Kategori", b =>
                {
                    b.HasOne("Basvurular.Entities.Marka", "Marka")
                        .WithMany("Kategoris")
                        .HasForeignKey("MarkaID");

                    b.Navigation("Marka");
                });

            modelBuilder.Entity("Basvurular.Entities.Mahalle", b =>
                {
                    b.HasOne("Basvurular.Entities.Ilce", "ilces")
                        .WithMany("Mahalles")
                        .HasForeignKey("ilceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ilces");
                });

            modelBuilder.Entity("Basvurular.Entities.Urunler", b =>
                {
                    b.HasOne("Basvurular.Entities.Kategori", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Basvurular.Entities.Marka", "Marka")
                        .WithMany("Urunlers")
                        .HasForeignKey("MarkaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Marka");
                });

            modelBuilder.Entity("Basvurular.Entities.Ilce", b =>
                {
                    b.Navigation("Mahalles");
                });

            modelBuilder.Entity("Basvurular.Entities.Kategori", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("Basvurular.Entities.Marka", b =>
                {
                    b.Navigation("Kategoris");

                    b.Navigation("Urunlers");
                });
#pragma warning restore 612, 618
        }
    }
}
